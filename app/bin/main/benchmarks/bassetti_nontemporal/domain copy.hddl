(define (domain domain_htn)
    ; at 4 locations 3 types of tasks can be performed - cleanlinessVerification, gauging, and reporting
    ; every task has 3 variations (3h, 6h, and 10h). The variation is known - it is declared in the problem file
    ; task is executed by a resource. There are 2 major types of resources - human and machine resources
    ; human resources are further specialized into technician, engineer, and responsable
    ; every task is executed at its assigned location. Only resources that are members of the said location can execute this task
	(:requirements :typing :hierarchy)
	(:types
        ; TIMESLOTs - variables that simulate temporality. Without slots it's impossible to produce plans with parallel actions
        timeslot
        ; RESOURCEs - human or machine. Resources are needed to perform tasks
        resource
        machine - resource
        human - resource
        technician - human
        engineer - human
        responsable - human
        ; TASKs - as we are interested in scheduling, our goal is execution of certain tasks
        task
        gauging - task
        gauging_short - gauging ; 3h
        gauging_normal - gauging ; 6h
        gauging_long - gauging ; 10h
        cleanlinessVerification - task
        cleanlinessVerification_short - cleanlinessVerification ; 3h
        cleanlinessVerification_normal - cleanlinessVerification ; 6h
        cleanlinessVerification_long - cleanlinessVerification ; 10h
        report - task
        report_short - report ; 3h
        report_normal - report ; 6h
        report_long - report ; 10h
        ; LOCATIONs - resources and tasks are tied to specific locations. A task can be executed only by resources that share the location
        location
	)
    (:constants 
        location1 - location
        location2 - location
        location3 - location
        location4 - location
    )


	(:predicates
        (busy ?arg0 - resource ?arg1 - timeslot) ; if TRUE - resource is occupied with some task
        (member_of ?arg0 - resource ?arg1 - location) ; indicates to which locations the resource is tied
        (not_task_performed ?arg0 - task) ; indicates if task needs to be executed
        (task_at ?arg0 - task ?arg1 - location) ; indicates at which location the task is to be executed
        (time_link ?arg0 - timeslot ?arg1 - timeslot) ; indicates if arg1 is a direct temporal successor of arg0. This is needed as some tasks last multiple hours, and tasks are not interruptible
	)

    ; =====================================
    ; ===========REPORTING START===========
    (:task reporting
        :parameters (?r - report ?l - location)
    )

    (:method m_reporting_short
        :parameters (?r - report_short ?h - technician ?m - machine ?l - location ?t1 - timeslot ?t2 - timeslot ?t3 - timeslot)
        :task (reporting ?r ?l)
        :precondition (and
            ; 1st - task is not performed yet
            (not_task_performed ?r)
            ; 2nd - the technician and machine are both part of the task's location
            (task_at ?r ?l)
            (member_of ?h ?l)
            (member_of ?m ?l)
            ; 3rd - machine and technician are both available over the duration of the task
            (not(busy ?h ?t1))
            (not(busy ?h ?t2))
            (not(busy ?h ?t3))
            (not(busy ?m ?t1))
            (not(busy ?m ?t2))
            (not(busy ?m ?t3))
            ; 4th - the timeslots are CONSECUTIVE
            (time_link ?t1 ?t2)
            (time_link ?t2 ?t3)
        )
        :subtasks (and
            (task0 (assign_resource_report_short ?h ?m ?t1 ?t2 ?t3))
        )
    )
    (:method m_reporting_normal
        :parameters (?r - report_normal ?h - technician ?m - machine ?l - location ?t1 - timeslot ?t2 - timeslot ?t3 - timeslot ?t4 - timeslot ?t5 - timeslot ?t6 - timeslot)
        :task (reporting ?r ?l)
        :precondition (and
            ; 1st - task is not performed yet
            (not_task_performed ?r)
            ; 2nd - the technician and machine are both part of the task's location
            (task_at ?r ?l)
            (member_of ?h ?l)
            (member_of ?m ?l)
            ; 3rd - machine and technician are both available over the duration of the task
            (not(busy ?h ?t1))
            (not(busy ?h ?t2))
            (not(busy ?h ?t3))
            (not(busy ?h ?t4))
            (not(busy ?h ?t5))
            (not(busy ?h ?t6))
            (not(busy ?m ?t1))
            (not(busy ?m ?t2))
            (not(busy ?m ?t3))
            (not(busy ?m ?t4))
            (not(busy ?m ?t5))
            (not(busy ?m ?t6))
            ; 4th - the timeslots are CONSECUTIVE
            (time_link ?t1 ?t2)
            (time_link ?t2 ?t3)
            (time_link ?t3 ?t4)
            (time_link ?t4 ?t5)
            (time_link ?t5 ?t6)
        )
        :subtasks (and
            (task0 (assign_resource_report_normal ?h ?m ?t1 ?t2 ?t3 ?t4 ?t5 ?t6))
        )
    )
    (:method m_reporting_long
        :parameters (?r - report_long ?h - technician ?m - machine ?l - location ?t1 - timeslot ?t2 - timeslot ?t3 - timeslot ?t4 - timeslot ?t5 - timeslot ?t6 - timeslot ?t7 - timeslot ?t8 - timeslot ?t9 - timeslot ?t10 - timeslot)
        :task (reporting ?r ?l)
        :precondition (and
            ; 1st - task is not performed yet
            (not_task_performed ?r)
            ; 2nd - the technician and machine are both part of the task's location
            (task_at ?r ?l)
            (member_of ?h ?l)
            (member_of ?m ?l)
            ; 3rd - machine and technician are both available over the duration of the task
            (not(busy ?h ?t1))
            (not(busy ?h ?t2))
            (not(busy ?h ?t3))
            (not(busy ?h ?t4))
            (not(busy ?h ?t5))
            (not(busy ?h ?t6))
            (not(busy ?h ?t7))
            (not(busy ?h ?t8))
            (not(busy ?h ?t9))
            (not(busy ?h ?t10))
            (not(busy ?m ?t1))
            (not(busy ?m ?t2))
            (not(busy ?m ?t3))
            (not(busy ?m ?t4))
            (not(busy ?m ?t5))
            (not(busy ?m ?t6))
            (not(busy ?m ?t7))
            (not(busy ?m ?t8))
            (not(busy ?m ?t9))
            (not(busy ?m ?t10))
            ; 4th - the timeslots are CONSECUTIVE
            (time_link ?t1 ?t2)
            (time_link ?t2 ?t3)
            (time_link ?t3 ?t4)
            (time_link ?t4 ?t5)
            (time_link ?t5 ?t6)
            (time_link ?t6 ?t7)
            (time_link ?t7 ?t8)
            (time_link ?t8 ?t9)
            (time_link ?t9 ?t10)
        )
        :subtasks (and
            (task0 (assign_resource_report_long ?h ?m ?t1 ?t2 ?t3 ?t4 ?t5 ?t6 ?t7 ?t8 ?t9 ?t10))
        )
    )

    (:action assign_resource_report_short
            :parameters (?r - report_short ?h - technician ?m - machine ?t1 - timeslot ?t2 - timeslot ?t3 - timeslot)
            :precondition
                (and
                    ; all preconditions have already been handled by the method
                )
            :effect
                (and
                    (not(not_task_performed ?r))
                    (busy ?h ?t1)
                    (busy ?h ?t2)
                    (busy ?h ?t3)
                    (busy ?m ?t1)
                    (busy ?m ?t2)
                    (busy ?m ?t3)
                )
        )
    (:action assign_resource_report_normal
            :parameters (?r - report_normal ?h - technician ?m - machine ?t1 - timeslot ?t2 - timeslot ?t3 - timeslot ?t4 - timeslot ?t5 - timeslot ?t6 - timeslot)
            :precondition
                (and
                    ; all preconditions have already been handled by the method
                )
            :effect
                (and
                    (not(not_task_performed ?r))
                    (busy ?h ?t1)
                    (busy ?h ?t2)
                    (busy ?h ?t3)
                    (busy ?h ?t4)
                    (busy ?h ?t5)
                    (busy ?h ?t6)
                    (busy ?m ?t1)
                    (busy ?m ?t2)
                    (busy ?m ?t3)
                    (busy ?m ?t4)
                    (busy ?m ?t5)
                    (busy ?m ?t6)
                )
        )
    (:action assign_resource_report_long
            :parameters (?r - report_long ?h - technician ?m - machine ?t1 - timeslot ?t2 - timeslot ?t3 - timeslot ?t4 - timeslot ?t5 - timeslot ?t6 - timeslot)
            :precondition
                (and
                    ; all preconditions have already been handled by the method
                )
            :effect
                (and
                    (not(not_task_performed ?r))
                    (busy ?h ?t1)
                    (busy ?h ?t2)
                    (busy ?h ?t3)
                    (busy ?h ?t4)
                    (busy ?h ?t5)
                    (busy ?h ?t6)
                    (busy ?h ?t7)
                    (busy ?h ?t8)
                    (busy ?h ?t9)
                    (busy ?h ?t10)
                    (busy ?m ?t1)
                    (busy ?m ?t2)
                    (busy ?m ?t3)
                    (busy ?m ?t4)
                    (busy ?m ?t5)
                    (busy ?m ?t6)
                    (busy ?m ?t7)
                    (busy ?m ?t8)
                    (busy ?m ?t9)
                    (busy ?m ?t10)
                )
        )
    ; ===========REPORTING END=============
    ; =====================================

)
